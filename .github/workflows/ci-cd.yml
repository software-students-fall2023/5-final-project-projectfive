name: CI/CD

on:
  push:
    branches:
      - "*"

jobs:
  build_app:
    runs-on: ubuntu-latest
    needs: test_app
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
    
      - name: Cache Python dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/Pipfile.lock') }}
    
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin
    
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
    
      - name: Build and push Docker image
        run: |
          # To reference the latest on a non-trunk branch, use app:latest.sanitized_ref
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            docker buildx build --no-cache --push --tag docker.io/${{ secrets.DOCKER_HUB_USERNAME }}/app:$(date +%s) --tag docker.io/${{ secrets.DOCKER_HUB_USERNAME }}/app:${{ github.sha }} --tag docker.io/${{ secrets.DOCKER_HUB_USERNAME }}/app:latest --file ./app/Dockerfile .
          else
            # In a separate variable, replace all special characters in ${{ github.ref }} (except '-' and '.') with '_', and remove the 'refs/heads/' prefix
            sanitized_ref=$(echo "${{ github.ref }}" | sed -E 's/[^a-zA-Z0-9_.-]+/_/g' | sed -E 's/^refs_heads_//g')
            docker buildx build --no-cache --push --tag docker.io/${{ secrets.DOCKER_HUB_USERNAME }}/app:$(date +%s) --tag docker.io/${{ secrets.DOCKER_HUB_USERNAME }}/app:${{ github.sha }} --tag docker.io/${{ secrets.DOCKER_HUB_USERNAME }}/app:latest.$sanitized_ref --file ./app/Dockerfile .
          fi
          
  test_app:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Cache Python dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/Pipfile.lock') }}
    
      - name: Set up Python 3.12
        uses: actions/setup-python@v2
        with:
          python-version: "3.12"

      - name: Run tests
        run: |
          python -m pip install pipenv
          pipenv install
          cd app
          pipenv run pytest -p no:warnings
          
  build_notifier:
    runs-on: ubuntu-latest
    needs: test_notifier
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
    
      - name: Cache Python dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/Pipfile.lock') }}
    
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin
    
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
    
      - name: Build and push Docker image
        run: |
          # To reference the latest on a non-trunk branch, use notifier:latest.sanitized_ref
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            docker buildx build --no-cache --push --tag docker.io/${{ secrets.DOCKER_HUB_USERNAME }}/notifier:$(date +%s) --tag docker.io/${{ secrets.DOCKER_HUB_USERNAME }}/notifier:${{ github.sha }} --tag docker.io/${{ secrets.DOCKER_HUB_USERNAME }}/notifier:latest --file ./notifier/Dockerfile .
          else
            # In a separate variable, replace all special characters in ${{ github.ref }} (except '-' and '.') with '_', and remove the 'refs/heads/' prefix
            sanitized_ref=$(echo "${{ github.ref }}" | sed -E 's/[^a-zA-Z0-9_.-]+/_/g' | sed -E 's/^refs_heads_//g')
            docker buildx build --no-cache --push --tag docker.io/${{ secrets.DOCKER_HUB_USERNAME }}/notifier:$(date +%s) --tag docker.io/${{ secrets.DOCKER_HUB_USERNAME }}/notifier:${{ github.sha }} --tag docker.io/${{ secrets.DOCKER_HUB_USERNAME }}/notifier:latest.$sanitized_ref --file ./notifier/Dockerfile .
          fi
          
  test_notifier:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Cache Python dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/Pipfile.lock') }}
    
      - name: Set up Python 3.12
        uses: actions/setup-python@v2
        with:
          python-version: "3.12"

      - name: Run tests
        run: |
          python -m pip install pipenv
          pipenv install
          cd notifier
          pipenv run pytest -p no:warnings
          
  deploy:
    runs-on: ubuntu-latest
    needs: [build_app, build_notifier]
    steps:
      - name: Run redeploy script
        run: |
          # Check that this commit was to main
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "${{ secrets.SSH_PRIVATE_KEY }}" > key
            chmod 600 key
            # Tell server at root@projectfive.duckdns.org to run the script at /root/CD.sh
            ssh -i key -o StrictHostKeyChecking=no root@projectfive.duckdns.org '/root/CD.sh'
          else
            echo "Not on main branch. Skipping deployment."
          fi